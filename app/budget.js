"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _ = require("lodash");
var Dialogs = require("ui/dialogs");
var BudgetBinding = /** @class */ (function () {
    function BudgetBinding(saveObject) {
        this.saveObject = saveObject;
        this.totalAmount = 0;
        this.setTotalAmountString();
    }
    BudgetBinding.prototype.setTotalAmountString = function () {
        this.totalAmountString = '$' + this.totalAmount.toFixed(2);
        this.saveObject.setNumber("total", this.totalAmount);
    };
    BudgetBinding.prototype.updateTotal = function (successes, value, factor, slack) {
        if (successes + slack === 0) {
            return;
        }
        var weeklyMax = _.toNumber(value);
        var weeklyIncome = weeklyMax;
        for (var failures = slack; failures + successes < 7; failures++) {
            weeklyIncome /= factor;
        }
        if (this.totalAmount < 0) {
            weeklyIncome *= 0.9;
        }
        this.totalAmount += weeklyIncome;
        this.setTotalAmountString();
    };
    BudgetBinding.prototype.setTotal = function (newTotal) {
        this.totalAmount = parseFloat(newTotal.toFixed(2));
        this.setTotalAmountString();
    };
    BudgetBinding.prototype.makePurchase = function () {
        var _this = this;
        Dialogs.prompt({
            title: "New Purchase",
            message: "How much did you spend?",
            okButtonText: "Confirm",
        }).then(function (result) {
            var purchaseAmount = _.toNumber(result.text);
            if (_this.verifyPurchase(purchaseAmount)) {
                _this.setTotal(_this.totalAmount - purchaseAmount);
            }
        });
    };
    BudgetBinding.prototype.verifyPurchase = function (amount) {
        return isFinite(amount) && amount > 0;
    };
    return BudgetBinding;
}());
exports.BudgetBinding = BudgetBinding;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVkZ2V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYnVkZ2V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMEJBQTRCO0FBQzVCLG9DQUFzQztBQUV0QztJQUtJLHVCQUFvQixVQUFlO1FBQWYsZUFBVSxHQUFWLFVBQVUsQ0FBSztRQUMvQixJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQTtRQUNwQixJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRUQsNENBQW9CLEdBQXBCO1FBQ0ksSUFBSSxDQUFDLGlCQUFpQixHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzRCxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFFRCxtQ0FBVyxHQUFYLFVBQVksU0FBaUIsRUFBRSxLQUFhLEVBQUUsTUFBYyxFQUFFLEtBQWE7UUFDdkUsRUFBRSxDQUFBLENBQUMsU0FBUyxHQUFHLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3pCLE1BQU0sQ0FBQztRQUNYLENBQUM7UUFDRCxJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2xDLElBQUksWUFBWSxHQUFHLFNBQVMsQ0FBQztRQUM3QixHQUFHLENBQUEsQ0FBQyxJQUFJLFFBQVEsR0FBRyxLQUFLLEVBQUUsUUFBUSxHQUFHLFNBQVMsR0FBRyxDQUFDLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQztZQUM3RCxZQUFZLElBQUksTUFBTSxDQUFDO1FBQzNCLENBQUM7UUFFRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkIsWUFBWSxJQUFJLEdBQUcsQ0FBQztRQUN4QixDQUFDO1FBRUQsSUFBSSxDQUFDLFdBQVcsSUFBSSxZQUFZLENBQUM7UUFDakMsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUVELGdDQUFRLEdBQVIsVUFBUyxRQUFnQjtRQUNyQixJQUFJLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUVELG9DQUFZLEdBQVo7UUFBQSxpQkFXQztRQVZHLE9BQU8sQ0FBQyxNQUFNLENBQUM7WUFDWCxLQUFLLEVBQUUsY0FBYztZQUNyQixPQUFPLEVBQUUseUJBQXlCO1lBQ2xDLFlBQVksRUFBRSxTQUFTO1NBQ3hCLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxNQUFNO1lBQ1QsSUFBTSxjQUFjLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDL0MsRUFBRSxDQUFBLENBQUMsS0FBSSxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JDLEtBQUksQ0FBQyxRQUFRLENBQUMsS0FBSSxDQUFDLFdBQVcsR0FBRyxjQUFjLENBQUMsQ0FBQztZQUNyRCxDQUFDO1FBQ1AsQ0FBQyxDQUFDLENBQUM7SUFDVCxDQUFDO0lBRUQsc0NBQWMsR0FBZCxVQUFlLE1BQVc7UUFDdEIsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFDTCxvQkFBQztBQUFELENBQUMsQUF0REQsSUFzREM7QUF0RFksc0NBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBfIGZyb20gXCJsb2Rhc2hcIjtcclxuaW1wb3J0ICogYXMgRGlhbG9ncyBmcm9tICd1aS9kaWFsb2dzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBCdWRnZXRCaW5kaW5nIHtcclxuXHJcbiAgICBwcml2YXRlIHRvdGFsQW1vdW50OiBudW1iZXI7XHJcbiAgICBwdWJsaWMgdG90YWxBbW91bnRTdHJpbmc6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNhdmVPYmplY3Q6IGFueSkge1xyXG4gICAgICAgIHRoaXMudG90YWxBbW91bnQgPSAwXHJcbiAgICAgICAgdGhpcy5zZXRUb3RhbEFtb3VudFN0cmluZygpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFRvdGFsQW1vdW50U3RyaW5nKCkge1xyXG4gICAgICAgIHRoaXMudG90YWxBbW91bnRTdHJpbmcgPSAnJCcgKyB0aGlzLnRvdGFsQW1vdW50LnRvRml4ZWQoMik7XHJcbiAgICAgICAgdGhpcy5zYXZlT2JqZWN0LnNldE51bWJlcihcInRvdGFsXCIsIHRoaXMudG90YWxBbW91bnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZVRvdGFsKHN1Y2Nlc3NlczogbnVtYmVyLCB2YWx1ZTogc3RyaW5nLCBmYWN0b3I6IG51bWJlciwgc2xhY2s6IG51bWJlcikge1xyXG4gICAgICAgIGlmKHN1Y2Nlc3NlcyArIHNsYWNrID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHdlZWtseU1heCA9IF8udG9OdW1iZXIodmFsdWUpO1xyXG4gICAgICAgIGxldCB3ZWVrbHlJbmNvbWUgPSB3ZWVrbHlNYXg7XHJcbiAgICAgICAgZm9yKGxldCBmYWlsdXJlcyA9IHNsYWNrOyBmYWlsdXJlcyArIHN1Y2Nlc3NlcyA8IDc7IGZhaWx1cmVzKyspIHtcclxuICAgICAgICAgICAgd2Vla2x5SW5jb21lIC89IGZhY3RvcjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnRvdGFsQW1vdW50IDwgMCkge1xyXG4gICAgICAgICAgICB3ZWVrbHlJbmNvbWUgKj0gMC45O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy50b3RhbEFtb3VudCArPSB3ZWVrbHlJbmNvbWU7XHJcbiAgICAgICAgdGhpcy5zZXRUb3RhbEFtb3VudFN0cmluZygpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFRvdGFsKG5ld1RvdGFsOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLnRvdGFsQW1vdW50ID0gcGFyc2VGbG9hdChuZXdUb3RhbC50b0ZpeGVkKDIpKTtcclxuICAgICAgICB0aGlzLnNldFRvdGFsQW1vdW50U3RyaW5nKCk7XHJcbiAgICB9XHJcblxyXG4gICAgbWFrZVB1cmNoYXNlKCkge1xyXG4gICAgICAgIERpYWxvZ3MucHJvbXB0KHtcclxuICAgICAgICAgICAgdGl0bGU6IFwiTmV3IFB1cmNoYXNlXCIsXHJcbiAgICAgICAgICAgIG1lc3NhZ2U6IFwiSG93IG11Y2ggZGlkIHlvdSBzcGVuZD9cIixcclxuICAgICAgICAgICAgb2tCdXR0b25UZXh0OiBcIkNvbmZpcm1cIixcclxuICAgICAgICAgIH0pLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcHVyY2hhc2VBbW91bnQgPSBfLnRvTnVtYmVyKHJlc3VsdC50ZXh0KTtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMudmVyaWZ5UHVyY2hhc2UocHVyY2hhc2VBbW91bnQpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRUb3RhbCh0aGlzLnRvdGFsQW1vdW50IC0gcHVyY2hhc2VBbW91bnQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgdmVyaWZ5UHVyY2hhc2UoYW1vdW50OiBhbnkpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gaXNGaW5pdGUoYW1vdW50KSAmJiBhbW91bnQgPiAwO1xyXG4gICAgfVxyXG59Il19